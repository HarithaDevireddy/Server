{"version":3,"sources":["components/Contact.js","components/LoadingComponent.js","components/shared/baseurl.js","components/Menu.js","redux/ActionTypes.js","redux/ActionCreators.js","components/DishDetail.js","components/Header.js","components/About.js","components/Footer.js","components/Home.js","components/CommentForm.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/Forms.js","App.js","redux/configurestore.js","reportWebVitals.js","index.js"],"names":["required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","props","handleSubmit","bind","values","alert","JSON","stringify","this","resetFeedbackForm","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","className","Breadcrumb","BreadcrumbItem","to","active","href","role","model","onSubmit","Row","Label","htmlFor","md","Col","text","id","name","placeholder","validators","show","messages","type","size","offset","check","checkbox","select","textarea","rows","Button","color","Component","Loading","baseUrl","RenderMenuItem","dish","Card","CardImg","width","src","image","alt","CardImgOverlay","CardTitle","Menu","menu","dishes","map","isLoading","errMess","ADD_COMMENT","DISHES_LOADING","DISHES_FAILED","ADD_DISHES","ADD_COMMENTS","COMMENTS_FAILED","PROMOS_LOADING","ADD_PROMOS","PROMOS_FAILED","ADD_LEADERS","LEADERS_FAILED","LEADERS_LOADING","postComment","dishId","rating","author","comment","dispatch","newComment","date","Date","toISOString","fetch","method","body","headers","credentials","then","response","ok","error","Error","status","statusText","json","ActionTypes","payload","addComment","catch","console","log","dishesLoading","dishesFailed","errmess","addDishes","commentsFailed","addComments","comments","promosLoading","promosFailed","addPromos","promos","addLeaders","leaders","leadersFailed","leadersLoading","addFeedback","feedback","CommentForm","state","isModelOpen","toggleModal","setState","outline","onClick","Modal","isOpen","toggle","ModalHeader","ModalBody","DishDetail","in","transformProps","exitTransform","top","CardBody","CardText","description","Intl","DateTimeFormat","year","month","day","format","parse","renderDish","renderComment","Header","isNavOpen","isModalOpen","toggleNav","handleLogin","event","username","value","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","Renderleader","leader","Media","left","heading","designation","About","CardHeader","title","Footer","RenderCard","item","CardSubtitle","Home","dishesErrMess","promotion","promoLoading","promoErrMess","leaderLoading","leaderErrMess","MainComponent","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","location","key","withRouter","connect","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45e6113f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,  Button,Row, FormGroup, FormFeedback, Label, Input, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors, actions } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n      \r\n      \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n       \r\n\r\n    }\r\n   \r\n\r\n  \r\n    handleSubmit(values) {\r\n      \r\n        alert('Thank you for your Feedback: ' + JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n       this.props.postFeedback(values.firstname,values.lastname,values.telnum,values.email,values.agree,values.contactType,values.message)\r\n     \r\n      \r\n    }\r\n   \r\n\r\n   \r\n\r\n    render() {\r\n\r\n      \r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model=\"feedback\"  onSubmit={(values)=>this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        \r\n                                     />\r\n                                       <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                   \r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        \r\n\r\n                                      />\r\n\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                  \r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".tel\" type=\"tel\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                        />\r\n                                      <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".tel\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n\r\n                                </Col>\r\n\r\n                               \r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\" className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                        />\r\n                                         <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"check-box\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\"\r\n                                                name=\"agree\" className=\"form-check-input\"\r\n                                               /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                       className=\"form-conrol\"\r\n                                       >\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".textarea\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\" className=\"form-control\"\r\n                                        ></Control.textarea>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};","export const baseUrl = 'http://localhost:3001/';","import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../components/shared/baseurl';\r\n\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        <Card>\r\n            <Link to={`/menu/${dish.id}`} >\r\n            <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\nconst Menu = (props) => {\r\n\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dishes.errMess) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h4>{props.dishes.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n            </div>\r\n        );\r\n}\r\n\r\nexport default Menu;","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING='DISHES_LOADING';\r\nexport const DISHES_FAILED='DISHES_FAILED';\r\nexport const ADD_DISHES='ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const ADD_LEADERS='ADD_LEADERS';\r\nexport const LEADERS_FAILED='LEADERS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_FEEDBACK='ADD-FEEDBACK';\r\n","import * as ActionTypes from './ActionTypes';\r\nimport { DISHES } from '../components/shared/Dishes';\r\nimport { baseUrl } from '../components/shared/baseurl';\r\n\r\n\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload: comment\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n    \r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n\r\n    dispatch(dishesLoading(true));\r\n\r\n    return fetch(baseUrl + 'dishes')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(dishes => dispatch(addDishes(dishes)))\r\n    .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type: ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n    type: ActionTypes.DISHES_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type: ActionTypes.ADD_DISHES,\r\n    payload: dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {    \r\n    return fetch(baseUrl + 'comments')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(comments => dispatch(addComments(comments)))\r\n    .catch(error => dispatch(commentsFailed(error.message)));\r\n};\r\nexport const commentsFailed = (errmess) => ({\r\n    type: ActionTypes.COMMENTS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const addComments = (comments) => ({\r\n    type: ActionTypes.ADD_COMMENTS,\r\n    payload: comments\r\n});\r\nexport const fetchPromos = () => (dispatch) => {\r\n    \r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(promos => dispatch(addPromos(promos)))\r\n    .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmess\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n\r\nexport const fetchLeaders = () => (dispatch) => {   \r\n  dispatch(leadersLoading()); \r\n    return fetch(baseUrl + 'leaders')\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            var errmess = new Error(error.message);\r\n            throw errmess;\r\n      })\r\n    .then(response => response.json())\r\n    .then(leaders => dispatch(addLeaders(leaders)))\r\n    .catch(error => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\nexport const leadersFailed = (errmess) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errmess\r\n});\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\n\r\n\r\nexport const postFeedback = (firstname,lastname,telnum,email,agree,contactType,message) => (dispatch) => {\r\n\r\n    const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email:email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message\r\n    \r\n        \r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n   \r\n    \r\n    return fetch(baseUrl + 'feedback', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n    .then(response => response.json())\r\n    .then(response =>  dispatch(addFeedback(response)))\r\n    .catch(error =>  { console.log('post feedback', error.message); alert('Your feedback could not be posted\\nError: '+error.message); });\r\n};\r\n\r\nexport const addFeedback = (feedback) => ({\r\n    type: ActionTypes.ADD_FEEDBACK,\r\n    payload: feedback\r\n});","import React, { Component } from 'react';\r\n\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem,Buttonx,Row, Col,Label,Button,ModalHeader,ModalBody,Modal  } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Errors, LocalForm } from 'react-redux-form';\r\nimport { postComment } from '../redux/ActionCreators';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../components/shared/baseurl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\n\r\nconst required = (val) => val && val.length\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModelOpen: !this.state.isModelOpen\r\n        })\r\n    }\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId,values.rating,values.name,values.comment)\r\n        \r\n        \r\n        \r\n     \r\n       \r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n\r\n                <Modal isOpen={this.state.isModelOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm  onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={10}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option >3</option>\r\n                                        <option >4</option>\r\n                                        <option >5</option>\r\n\r\n                                    </Control.select>\r\n                               </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={10}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        className=\"form-control\" validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={10}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"commet\" name=\"comment\"\r\n                                        className=\"form-control\"\r\n\r\n                                        validators={{\r\n                                            required\r\n                                        }}\r\n\r\n                                    />\r\n\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".comment\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={2}>\r\n                                    <Button  color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                        </LocalForm>\r\n\r\n                    </ModalBody>\r\n\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass DishDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    \r\n    renderDish(dish) {\r\n        if (dish != null) {\r\n            return (\r\n                <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                    <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody >\r\n                        <CardTitle><h5>{dish.name}</h5></CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n                </FadeTransform>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n    renderComment(comments) {\r\n        let commentslist = comments.map((comment) => {\r\n            return (\r\n                <div>\r\n                    <Stagger in>\r\n                    <Fade in>\r\n                    <h5>{comment.comment}</h5>\r\n                    <h5>--{comment.author},\r\n                        {new Intl.DateTimeFormat('en-US',\r\n                            { year: 'numeric', month: 'short', day: '2-digit' }).\r\n                            format(new Date(Date.parse(comment.date)))}</h5>\r\n                             </Fade>\r\n                            </Stagger>\r\n                               \r\n                            \r\n                           \r\n                </div>\r\n              \r\n\r\n            )\r\n\r\n        })\r\n   \r\n        return commentslist\r\n\r\n\r\n    }\r\n    render() {\r\n        const dish = this.props.dish;\r\n        const comments = this.props.comments;\r\n        var postComment=this.props.postComment;\r\n      \r\n        if (this.props.isLoading) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.errMess) {\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">            \r\n                        <h4>{this.props.errMess}</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n      \r\n        else if (dish != null) {\r\n            return (\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                        <h3>{dish.name}</h3>\r\n                        <hr />\r\n                    </div>  \r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            {this.renderDish(dish)}\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <h4>Comments</h4>\r\n                            {this.renderComment(comments)}\r\n                            \r\n                           \r\n                            <CommentForm postComment={postComment} dishId={dish.id} />\r\n                          \r\n                            \r\n                            \r\n                     \r\n\r\n                           \r\n                        </div>\r\n\r\n                        \r\n                        \r\n                    </div>\r\n                    \r\n\r\n                </div>\r\n\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <div></div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default DishDetail","import React, { Component } from 'react'\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,Button, Modal, ModalHeader, ModalBody,\r\n  Form, FormGroup, Input, Label  } from 'reactstrap';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n  \r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n       \r\n        this.state = {\r\n          isNavOpen: false,\r\n          isModalOpen: false\r\n        \r\n        \r\n       \r\n        \r\n        };\r\n       \r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n      \r\n     \r\n       \r\n      }\r\n      toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n    \r\n      \r\n   \r\n\r\n      toggleNav() {\r\n        this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n        });\r\n      }\r\n\r\n    \r\n      handleLogin(event) {\r\n        \r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n      \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assests/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\r\n                            </NavItem>\r\n                            </Nav>\r\n                            \r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                                    \r\n                                    \r\n                                </NavItem>\r\n                            </Nav>\r\n                            \r\n                            \r\n                        </Collapse>\r\n                    </div>\r\n                 \r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n               \r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                   \r\n                    <ModalBody>\r\n                    <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n              \r\n       \r\n        \r\n        \r\n                \r\n    </div>\r\n               \r\n    \r\n        );\r\n    }\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../components/shared/baseurl';\r\nimport {  Stagger } from 'react-animation-components';\r\n\r\n\r\nfunction Renderleader({ leader }) {\r\n    return (\r\n        <Stagger in>\r\n        <Media >\r\n            <Media left>\r\n                <Media src={baseUrl + leader.image} alt={leader.name} ></Media>\r\n            </Media>\r\n            <Media body >\r\n                <Media heading>\r\n                    {leader.name}\r\n\r\n                </Media>\r\n                {leader.designation}\r\n                <Media>\r\n                {leader.description}\r\n                </Media>\r\n\r\n            </Media>\r\n        </Media>\r\n        </Stagger>\r\n    )\r\n\r\n}\r\n\r\nfunction About(props) {\r\n    const leaders = props.leaders.map((leader) => {\r\n        return (\r\n            <div className=\"col-12  m-1 \" key={leader.id}>\r\n                <Renderleader leader={leader} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p><br></br>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                    <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                        P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 \">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n               \r\n                <div className=\"row\" >\r\n                    {leaders}\r\n               \r\n\r\n                </div>\r\n\r\n               \r\n\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><a href=\"#\">Home</a></li>\r\n                        <li><a href=\"#\">About</a></li>\r\n                        <li><a href=\"#\">Menu</a></li>\r\n                        <li><a href=\"#\">Contact</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../components/shared/baseurl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item,isLoading, errMess}) {\r\n    if (isLoading) {\r\n        return(\r\n                <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return(\r\n                <h4>{errMess}</h4>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n        <Card>\r\n        <CardImg src={baseUrl + item.image} alt={item.name} width=\"100%\"/>\r\n            <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\r\n            <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n        </Card>\r\n        </FadeTransform>\r\n    );\r\n\r\n}\r\n\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}  />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.promotion} isLoading={props.promoLoading} errMess={props.promoErrMess} />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                <RenderCard item={props.leader} isLoading={props.leaderLoading} errMess={props.leaderErrMess} /> \r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n","\r\nimport React, { Component } from 'react';\r\nimport { Button, ModalBody, Modal, Form, FormGroup, Label, Input, ModalHeader, Row, Col } from 'reactstrap';\r\nimport { Control, Errors, LocalForm } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModelOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModelOpen: !this.state.isModelOpen\r\n        })\r\n    }\r\n    handleSubmit(values) {\r\n        console.log('Current State is: ' + JSON.stringify(values));\r\n        alert('Current State is: ' + JSON.stringify(values));\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit Comment</Button>\r\n\r\n                <Modal isOpen={this.state.isModelOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"rating\" md={10}>Rating</Label>\r\n                                <Col md={12}>\r\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option >3</option>\r\n                                        <option >4</option>\r\n                                        <option >5</option>\r\n\r\n                                    </Control.select>\r\n                               </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"name\" md={10}>Your Name</Label>\r\n                                <Col md={12}>\r\n                                    <Control.text model=\".name\" id=\"name\" name=\"name\"\r\n                                        className=\"form-control\" validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }} />\r\n\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"comment\" md={10}>Comment</Label>\r\n                                <Col md={12}>\r\n                                    <Control.textarea model=\".comment\" id=\"commet\" name=\"comment\"\r\n                                        className=\"form-control\"\r\n\r\n                                        validators={{\r\n                                            required\r\n                                        }}\r\n\r\n                                    />\r\n\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".comment\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n\r\n                                        }}\r\n                                    />\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row className=\"form-group\">\r\n                                <Col md={2}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n\r\n\r\n                            </Row>\r\n\r\n                        </LocalForm>\r\n\r\n                    </ModalBody>\r\n\r\n                </Modal>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentForm;\r\n\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\n\r\nimport Menu from './Menu';\r\nimport DishDetail from './DishDetail';\r\n\r\nimport Header from './Header';\r\nimport About from './About';\r\n\r\nimport Footer from './Footer';\r\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport Home from './Home';\r\nimport CommentForm from './CommentForm';\r\nimport {  postComment, fetchDishes,fetchComments, fetchPromos,fetchLeaders,postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\n\r\nconst mapStateToProps=state=>{\r\n    return{\r\n        dishes:state.dishes,\r\n        comments:state.comments,\r\n        promotions:state.promotions,\r\n        leaders:state.leaders\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  \r\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n    \r\n        fetchDishes: () => { dispatch(fetchDishes())},\r\n        resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n        fetchComments: () => dispatch(fetchComments()),\r\n        fetchPromos: () => dispatch(fetchPromos()),\r\n        fetchLeaders: () => dispatch(fetchLeaders()),\r\n        postFeedback: (firstname,lastname,telnum,email,agree,contactType,message)=> dispatch(postFeedback(firstname,lastname,telnum,email,agree,contactType,message))\r\n  \r\n  });\r\n  \r\n\r\nclass MainComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n      }\r\n    \r\n    render() {\r\n        const Homepage=()=>{\r\n            return (\r\n                <Home \r\n              dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n              dishesLoading={this.props.dishes.isLoading}\r\n              dishesErrMess={this.props.dishes.errMess}\r\n              promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n              promoLoading={this.props.promotions.isLoading}\r\n              promoErrMess={this.props.promotions.errMess}\r\n              leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n              leaderLoading={this.props.leaders.isLoading}\r\n               leaderErrMess={this.props.leaders.errMess}\r\n          />\r\n            )\r\n            \r\n\r\n        }\r\n        const DishWithId = ({match}) => {\r\n            return(\r\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n                isLoading={this.props.dishes.isLoading}\r\n                errMess={this.props.dishes.errMess}\r\n                comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\r\n                commentsErrMess={this.props.comments.errMess}\r\n                postComment={this.props.postComment}\r\n               \r\n              />\r\n            );\r\n          };\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <TransitionGroup>\r\n                <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                <Switch>\r\n                    <Route path=\"/home\" component={Homepage}/>\r\n                    <Route exact path=\"/menu\" component={()=> <Menu dishes={this.props.dishes}/> }/>\r\n                    <Route exact path='/contactus' component={() => <Contact resetFeedbackForm={this.props.resetFeedbackForm}  postFeedback={this.props.postFeedback} />} />\r\n                    <Route exact path=\"/aboutus\" component={()=> <About leaders={this.props.leaders.leaders}/> }/>\r\n                    <Route path='/menu/:dishId' component={DishWithId} />\r\n                    <Route path=\"/comment\"><CommentForm/></Route>\r\n                    \r\n                \r\n               \r\n\r\n                </Switch>\r\n                </CSSTransition>\r\n                </TransitionGroup>\r\n\r\n                <Footer />\r\n                \r\n               \r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(MainComponent));\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = { isLoading: true,\r\n    errMess: null,\r\n    dishes:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {...state, isLoading: true, errMess: null, dishes: []}\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import { COMMENTS } from '../components/shared/Comments';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\r\n    switch (action.type) {\r\n      case ActionTypes.ADD_COMMENTS:\r\n        return {...state, errMess: null, comments: action.payload};\r\n  \r\n      case ActionTypes.COMMENTS_FAILED:\r\n        return {...state, errMess: action.payload};\r\n  \r\n      case ActionTypes.ADD_COMMENT:\r\n          var comment = action.payload;\r\n         \r\n          return { ...state, comments: state.comments.concat(comment)};\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };","import { PROMOTIONS } from '../components/shared/Promotions';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]}, action) => {\r\nswitch (action.type) {\r\ncase ActionTypes.ADD_PROMOS:\r\nreturn {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\ncase ActionTypes.PROMOS_LOADING:\r\nreturn {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\ncase ActionTypes.PROMOS_FAILED:\r\nreturn {...state, isLoading: false, errMess: action.payload};\r\n\r\ndefault:\r\nreturn state;\r\n}\r\n};","import { LEADERS } from '../components/shared/Leaders';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = { isLoading: true,errMess: null, leaders:[]}, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n    return {...state, isLoading: false, errMess: null, leaders: action.payload};\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n        return {...state, isLoading: true, errMess: null, leaders: []}\r\n\r\n    case ActionTypes.LEADERS_FAILED:\r\n        return {...state, isLoading: false, errMess: action.payload};\r\n\r\n    default:\r\n      return state;\r\n  }\r\n  };","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import { Modal } from 'bootstrap';\nimport React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport './App.css'\nimport MainComponent from './components/MainComponent';\nimport ModalExample from './components/modal';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configurestore'\n\nconst store = ConfigureStore();\n\n\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n        <div className=\"App\">\n\n\n          <MainComponent />\n\n\n\n        </div>\n      </BrowserRouter>\n\n\n      </Provider>\n      \n\n    )\n\n  }\n}\n\n\nexport default App;\n","import {createStore, combineReducers,applyMiddleware} from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\n\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport  thunk from  'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './Forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\n\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}